{"version":3,"sources":["components/CardList.js","components/SearchBox.js","components/ErrorBoundary.js","components/Scroll.js","containers/App.js","index.js"],"names":["CardList","robots","Error","SearchBox","searchChange","className","type","placeholder","onChange","ErrorBoundary","props","state","hasError","error","info","this","setState","children","Component","Scroll","style","overflowY","border","height","App","onSearchChange","e","searchField","target","value","bind","console","log","fetch","then","response","json","users","filteredRobots","filter","robot","name","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"kPA2BeA,EArBE,SAAC,GAAe,EAAbC,OAEhB,MAAM,IAAIC,MAAM,YCOLC,EAVG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAClB,OACE,yBAAKC,UAAU,OACb,2BAAOA,UAAU,mBAAmBC,KAAK,SACzCC,YAAY,gBACZC,SAAWJ,MCaFK,G,kBAnBb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACXC,UAAU,GAHK,E,+EAODC,EAAOC,GACvBC,KAAKC,SAAS,CAAEJ,UAAU,M,+BAI1B,OAAIG,KAAKJ,MAAMC,SACN,0DAEFG,KAAKL,MAAMO,a,GAhBMC,cCUbC,EARA,SAACT,GACd,OACE,yBAAKU,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,WAClEb,EAAMO,WCgDEO,E,YAhDb,aAAe,IAAD,8BACZ,+CAoBFC,eAAiB,SAACC,GAChB,EAAKV,SAAS,CAACW,YAAaD,EAAEE,OAAOC,SApBrC,EAAKlB,MAAQ,CACXV,OAAQ,GACR0B,YAAa,IAEf,EAAKF,eAAiB,EAAKA,eAAeK,KAApB,gBACtBC,QAAQC,IAAI,eAPA,E,iFAUO,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAAAC,GACN,OAAOA,EAASC,UAEfF,MAAK,SAAAG,GACJ,EAAKrB,SAAS,CAACf,OAAQoC,OAE3BN,QAAQC,IAAI,uB,+BAOJ,IAAD,OACPD,QAAQC,IAAI,UACZ,IAAMM,EAAiBvB,KAAKJ,MAAMV,OAAOsC,QAAO,SAAAC,GAC9C,OAAOA,EAAMC,KAAKC,cAAcC,SAAS,EAAKhC,MAAMgB,YAAYe,kBAElE,OAAiC,IAA7B3B,KAAKJ,MAAMV,OAAO2C,OACb,wBAAIvC,UAAU,UAAd,gBAGL,yBAAKA,UAAU,MACb,wBAAIA,UAAU,MAAd,eACA,kBAAC,EAAD,CAAWD,aAAcW,KAAKU,iBAC9B,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAUxB,OAAQqC,W,GAxCdpB,a,MCClB2B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.2447f4f4.chunk.js","sourcesContent":["/* eslint-disable indent */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable no-unused-vars */\r\nimport React from \"react\"\r\nimport Card from \"./Card\"\r\n\r\nconst CardList = ({ robots }) => {\r\n  if (true) {\r\n    throw new Error(\"NOOOOO!\")\r\n  }\r\n  return (\r\n    <div>\r\n     { \r\n      robots.map((robot, i) => {\r\n        return (\r\n          <Card\r\n            key={i}\r\n            id={robot.id}\r\n            name={robot.name}\r\n            email={robot.email} />\r\n        );\r\n      })\r\n     }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardList","/* eslint-disable no-undef */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable indent */\r\nimport React from \"react\"\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n  return(\r\n    <div className=\"pa2\">\r\n      <input className=\"bg-lightest-blue\" type=\"search\" \r\n      placeholder=\"search robots\"\r\n      onChange={ searchChange } />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchBox","/* eslint-disable no-unused-vars */\r\nimport React, { Component } from \"react\"\r\n\r\nclass ErrorBoundary extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false\r\n    }\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    this.setState({ hasError: true})\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <h1>Ooooops. That is not good.</h1>\r\n    }\r\n    return this.props.children\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary","/* eslint-disable indent */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable no-unused-vars */\r\nimport React from \"react\"\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div style={{overflowY: \"scroll\", border: \"1px solid black\", height: \"77.5vh\"}}>\r\n      {props.children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Scroll","import React, { Component } from \"react\"\r\nimport CardList from \"../components/CardList\"\r\nimport SearchBox from \"../components/SearchBox\"\r\nimport \"./App.css\"\r\nimport ErrorBoundary from \"../components/ErrorBoundary\"\r\nimport Scroll from \"../components/Scroll\"\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      robots: [],\r\n      searchField: \"\"\r\n    }\r\n    this.onSearchChange = this.onSearchChange.bind(this)\r\n    console.log('constructor');\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then(response => {\r\n      return response.json();\r\n    })\r\n      .then(users => {\r\n        this.setState({robots: users})\r\n    });\r\n    console.log('componentDidMount');\r\n  }\r\n\r\n  onSearchChange = (e) => {\r\n    this.setState({searchField: e.target.value})\r\n  } \r\n\r\n  render() {\r\n    console.log('render');\r\n    const filteredRobots = this.state.robots.filter(robot => {\r\n      return robot.name.toLowerCase().includes(this.state.searchField.toLowerCase());\r\n    })\r\n    if (this.state.robots.length === 0) {\r\n      return <h1 className=\"tc mv7\">Loading.....</h1>\r\n    } else {\r\n      return (\r\n        <div className=\"tc\">\r\n          <h1 className=\"f1\">RoboFriends</h1>\r\n          <SearchBox searchChange={this.onSearchChange} />\r\n          <Scroll>\r\n            <ErrorBoundary>\r\n              <CardList robots={filteredRobots} />\r\n            </ErrorBoundary>\r\n          </Scroll>  \r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default App\r\n","/* eslint-disable no-unused-vars */\r\n/* eslint-disable quotes */\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './containers/App'\r\nimport 'tachyons'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}