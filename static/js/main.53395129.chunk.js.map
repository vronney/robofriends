{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/ErrorBoundary.js","components/Scroll.js","containers/App.js","index.js"],"names":["Card","props","name","email","id","className","src","alt","CardList","robots","map","robot","i","key","SearchBox","searchChange","type","placeholder","onChange","ErrorBoundary","state","hasError","error","info","this","setState","children","Component","Scroll","style","overflowY","border","height","App","onSearchChange","e","searchField","target","value","bind","console","log","fetch","then","response","json","users","filteredRobots","filter","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"kPAmBeA,EAbF,SAACC,GAAW,IACfC,EAAoBD,EAApBC,KAAMC,EAAcF,EAAdE,MAAOC,EAAOH,EAAPG,GACrB,OACE,yBAAKC,UAAU,uDACb,yBAAKC,IAAG,+BAA0BF,EAA1B,YAAwCG,IAAI,UACpD,6BACE,4BAAKL,GACL,2BAAIC,MCWGK,EAlBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAClB,OACE,6BAEEA,EAAOC,KAAI,SAACC,EAAOC,GACjB,OACE,kBAAC,EAAD,CACEC,IAAKD,EACLR,GAAIO,EAAMP,GACVF,KAAMS,EAAMT,KACZC,MAAOQ,EAAMR,aCDVW,EAVG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAClB,OACE,yBAAKV,UAAU,OACb,2BAAOA,UAAU,mBAAmBW,KAAK,SACzCC,YAAY,gBACZC,SAAWH,MCaFI,G,kBAnBb,WAAYlB,GAAQ,IAAD,8BACjB,4CAAMA,KACDmB,MAAQ,CACXC,UAAU,GAHK,E,+EAODC,EAAOC,GACvBC,KAAKC,SAAS,CAAEJ,UAAU,M,+BAI1B,OAAIG,KAAKJ,MAAMC,SACN,0DAEFG,KAAKvB,MAAMyB,a,GAhBMC,cCUbC,EARA,SAAC3B,GACd,OACE,yBAAK4B,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,WAClE/B,EAAMyB,WCgDEO,E,YAhDb,aAAe,IAAD,8BACZ,+CAoBFC,eAAiB,SAACC,GAChB,EAAKV,SAAS,CAACW,YAAaD,EAAEE,OAAOC,SApBrC,EAAKlB,MAAQ,CACXX,OAAQ,GACR2B,YAAa,IAEf,EAAKF,eAAiB,EAAKA,eAAeK,KAApB,gBACtBC,QAAQC,IAAI,eAPA,E,iFAUO,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAAAC,GACN,OAAOA,EAASC,UAEfF,MAAK,SAAAG,GACJ,EAAKrB,SAAS,CAAChB,OAAQqC,OAE3BN,QAAQC,IAAI,uB,+BAOJ,IAAD,OACPD,QAAQC,IAAI,UACZ,IAAMM,EAAiBvB,KAAKJ,MAAMX,OAAOuC,QAAO,SAAArC,GAC9C,OAAOA,EAAMT,KAAK+C,cAAcC,SAAS,EAAK9B,MAAMgB,YAAYa,kBAElE,OAAiC,IAA7BzB,KAAKJ,MAAMX,OAAO0C,OACb,wBAAI9C,UAAU,UAAd,gBAGL,yBAAKA,UAAU,MACb,wBAAIA,UAAU,MAAd,eACA,kBAAC,EAAD,CAAWU,aAAcS,KAAKU,iBAC9B,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAUzB,OAAQsC,W,GAxCdpB,a,MCClByB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.53395129.chunk.js","sourcesContent":["/* eslint-disable-next-line */\r\n/* eslint-disable semi */\r\n/* eslint-disable indent */\r\n/* eslint-disable linebreak-style */\r\nimport React from \"react\";\r\n\r\nconst Card = (props) => {\r\n  const { name, email, id } = props;\r\n  return (\r\n    <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n      <img src={`https://robohash.org/${id}?200x200`} alt=\"robot\" />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;","/* eslint-disable indent */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable no-unused-vars */\r\nimport React from \"react\"\r\nimport Card from \"./Card\"\r\n\r\nconst CardList = ({ robots }) => {\r\n  return (\r\n    <div>\r\n     { \r\n      robots.map((robot, i) => {\r\n        return (\r\n          <Card\r\n            key={i}\r\n            id={robot.id}\r\n            name={robot.name}\r\n            email={robot.email} />\r\n        );\r\n      })\r\n     }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardList","/* eslint-disable no-undef */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable indent */\r\nimport React from \"react\"\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n  return(\r\n    <div className=\"pa2\">\r\n      <input className=\"bg-lightest-blue\" type=\"search\" \r\n      placeholder=\"search robots\"\r\n      onChange={ searchChange } />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchBox","/* eslint-disable no-unused-vars */\r\nimport React, { Component } from \"react\"\r\n\r\nclass ErrorBoundary extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false\r\n    }\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    this.setState({ hasError: true})\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <h1>Ooooops. That is not good.</h1>\r\n    }\r\n    return this.props.children\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary","/* eslint-disable indent */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable no-unused-vars */\r\nimport React from \"react\"\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div style={{overflowY: \"scroll\", border: \"1px solid black\", height: \"77.5vh\"}}>\r\n      {props.children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Scroll","import React, { Component } from \"react\"\r\nimport CardList from \"../components/CardList\"\r\nimport SearchBox from \"../components/SearchBox\"\r\nimport \"./App.css\"\r\nimport ErrorBoundary from \"../components/ErrorBoundary\"\r\nimport Scroll from \"../components/Scroll\"\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      robots: [],\r\n      searchField: \"\"\r\n    }\r\n    this.onSearchChange = this.onSearchChange.bind(this)\r\n    console.log('constructor');\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then(response => {\r\n      return response.json();\r\n    })\r\n      .then(users => {\r\n        this.setState({robots: users})\r\n    });\r\n    console.log('componentDidMount');\r\n  }\r\n\r\n  onSearchChange = (e) => {\r\n    this.setState({searchField: e.target.value})\r\n  } \r\n\r\n  render() {\r\n    console.log('render');\r\n    const filteredRobots = this.state.robots.filter(robot => {\r\n      return robot.name.toLowerCase().includes(this.state.searchField.toLowerCase());\r\n    })\r\n    if (this.state.robots.length === 0) {\r\n      return <h1 className=\"tc mv7\">Loading.....</h1>\r\n    } else {\r\n      return (\r\n        <div className=\"tc\">\r\n          <h1 className=\"f1\">RoboFriends</h1>\r\n          <SearchBox searchChange={this.onSearchChange} />\r\n          <Scroll>\r\n            <ErrorBoundary>\r\n              <CardList robots={filteredRobots} />\r\n            </ErrorBoundary>\r\n          </Scroll>  \r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default App\r\n","/* eslint-disable no-unused-vars */\r\n/* eslint-disable quotes */\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './containers/App'\r\nimport 'tachyons'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}